name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install build dependencies (for Linux)
        run: sudo apt-get update && sudo apt-get install -y build-essential python3-dev libffi-dev

      - name: Install Poetry
        run: |
          pip install poetry
          poetry self add poetry-plugin-export

      - name: Cache Poetry virtualenvs
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies with Poetry
        run: poetry install

      - name: Export requirements.txt for Snyk
        run: poetry export -f requirements.txt --output requirements.txt --without-hashes

      - name: Run isort
        run: poetry run isort --check-only nuclear_news_indexer.py

      - name: Run black
        run: poetry run black --check --line-length 79 nuclear_news_indexer.py

      - name: Run flake8
        run: poetry run flake8 nuclear_news_indexer.py

      - name: Run mypy (type checking)
        run: poetry run mypy nuclear_news_indexer.py
        # Mypy config disables union-attr error code for openpyxl compatibility

      - name: Set dummy Key Vault URL for tests
        run: echo "KEY_VAULT_URL=https://dummy.vault.azure.net/" >> $GITHUB_ENV

      - name: Set dummy Azure secrets for tests
        run: |
          echo "AI-OPENAI-KEY=dummy-openai-key" >> $GITHUB_ENV
          echo "AI-OPENAI-ENDPOINT=https://dummy-openai-endpoint.openai.azure.com/" >> $GITHUB_ENV
          echo "AI-OPENAI-DEPLOYMENT=dummy-deployment" >> $GITHUB_ENV
          echo "AI-SEARCH-PRIMARY-KEY=dummy-search-key" >> $GITHUB_ENV
          echo "AI-SEARCH-ENDPOINT=https://dummy-search-endpoint.search.windows.net/" >> $GITHUB_ENV

      - name: Run tests with coverage
        run: |
          poetry run coverage run -m unittest discover tests
          poetry run coverage xml

      - name: Run Snyk to check for vulnerabilities (requirements.txt)
        uses: snyk/actions/python@master
        with:
          args: --file=requirements.txt
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: rjglabs_ai-nuke-newsfeed
          SONAR_ORGANIZATION: rjglabs

      - name: Run Bandit (security static analysis)
        run: poetry run bandit -r nuclear_news_indexer.py --skip B101,B404,B603
        continue-on-error: true
